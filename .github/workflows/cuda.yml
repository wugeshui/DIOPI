name: diopi ci
on:
  workflow_dispatch:
  push:
    branches:
      - "wgs/**"
      - main
  pull_request:
    paths-ignore:
      - "**.md"
      - ".github/ISSUE_TEMPLATE/**"
      - ".git*"
      - "CODE_OF_CONDUCT**"

env:
  ENV_PATH: '/mnt/cache/share/platform/env'
  DEEPLINK_PATH: '/mnt/cache/share/deeplinkci/github/${{ github.repository }}'

concurrency:
  group: ${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  check:
    name: check
    runs-on: tps-diopi-ci
    outputs:
      output: ${{ steps.set-run-vars.outputs.RUN_RESULT }}
    steps:
      - name: Checkout Code
        uses: wugeshui/DIOPI/.github/actions/checkout-code@main
        with:
          machine: "SH1988"

      - name: Set output variables
        id: set-run-vars
        env:
          GITHUB_TOKEN: "${{ secrets.CI_TOKEN != '' && secrets.CI_TOKEN || 'NONE' }}"
        run: |
          PR_NUMBER="${{ github.event.pull_request.number || 0 }}"
          curl -sLJO https://raw.githubusercontent.com/${{ github.repository }}/main/scripts/filter_ci.py
          RUN_RESULT=$(python3 filter_ci.py ${PR_NUMBER})
          echo "RUN_RESULT=$RUN_RESULT" >> "$GITHUB_OUTPUT"

      - name: lint
        uses: wugeshui/DIOPI/.github/actions/code-build-test@main
        with:
          machine: "SH1988"
          build_env: "/mnt/cache/share/platform/env/pt2.0_diopi"
          build_shell: 'cd diopi_test && bash scripts/ci_script.sh py-lint && bash scripts/ci_script.sh cpp-lint && cd ../impl && bash scripts/ci_script.sh cpp-lint'
          job_name: ${{ github.job }}
          partition: ${{ vars.SLURM_PAR_SH1984 != '' && vars.SLURM_PAR_SH1984 || 'pat_rd -x SH-IDC1-10-198-8-58,SH-IDC1-10-198-8-87' }}
          cleaner: all

#  runs_on_cuda:
#    name: runs on cuda
#    needs: check
##    if: ${{ contains( needs.check.outputs.output, 'NV' ) }}
#    uses: ./.github/workflows/_runs-on-cuda.yml

  runs-on-camb:
    name: runs on camb
    needs: check
#    if: ${{ contains( needs.check.outputs.output, 'CAMB' ) }}
    uses: ./.github/workflows/_runs-on-camb.yml

  runs-on-a100:
    name: runs on a100
    needs: check
#    if: ${{ contains( needs.check.outputs.output, 'NV' ) }}
    uses: ./.github/workflows/_runs-on-a100.yml

  runs-on-ascend:
    name: runs on ascend
    needs: check
#    if: ${{ contains( needs.check.outputs.output, 'ASCEND' ) }}
    uses: ./.github/workflows/_runs-on-ascend.yml

  runs-on-topsrider:
    name: runs on topsrider
    needs: check
#    if: ${{ contains( needs.check.outputs.output, 'TOPSRIDER' ) }}
    uses: ./.github/workflows/_runs-on-topsrider.yml

#  runs-on-supa:
#    name: runs on supa
#    needs: check
##    if: ${{ contains( needs.check.outputs.output, 'SUPA' ) }}
#    uses: ./.github/workflows/_runs-on-supa.yml
