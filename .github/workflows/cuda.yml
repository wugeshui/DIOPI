name: diopi ci
on:
  workflow_dispatch:
  push:
    branches:
      - main
      - dev_v0.25
  pull_request:
    paths-ignore:
      - "**.md"
      - ".github/ISSUE_TEMPLATE/**"
      - ".git*"
      - "CODE_OF_CONDUCT**"

env:
  ENV_PATH: '/mnt/cache/share/platform/env'

concurrency:
  group: ${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  check:
    name: check
    runs-on: tps-diopi-ci
    outputs:
      output: ${{ steps.set-run-vars.outputs.RUN_RESULT }}
    steps:
      - name: Checkout Code
        uses: wugeshui/DIOPI/.github/actions/checkout-code@main
        with:
          machine: "SH1988"

      - name: Set output variables
        id: set-run-vars
        env:
          GITHUB_TOKEN: "${{ secrets.CI_TOKEN != '' && secrets.CI_TOKEN || 'NONE' }}"
        run: |
          PR_NUMBER="${{ github.event.pull_request.number || 0 }}"
          cd ${DEEPLINK_PATH}/${GITHUB_RUN_NUMBER}/source && RUN_RESULT=$(python3 scripts/filter_ci.py ${PR_NUMBER})
          echo "RUN_RESULT=$RUN_RESULT" >> "$GITHUB_OUTPUT"

#      - name: lint
#        run: |
#          ssh CUDA """
#          set -e
#          cd ${DEEPLINK_PATH}/ && ls -al && find ${DEEPLINK_PATH}/ -maxdepth 1 -mmin +300 -type d |xargs rm -rf
#          source ${ENV_PATH}/${ENV_NAME}
#          cd ${DEEPLINK_PATH}/${GITHUB_RUN_NUMBER} && rm -rf ${GITHUB_JOB} && cp -R source ${GITHUB_JOB}  && cd ${GITHUB_JOB}
#          export CI=true
#          srun --job-name=${GITHUB_JOB} --partition=${SLURM_PAR_SH1988} --time=10 bash -c 'cd diopi_test && bash scripts/ci_script.sh py-lint \
#          && bash scripts/ci_script.sh cpp-lint && cd ../impl \ && bash scripts/ci_script.sh cpp-lint' \
#          && cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf ${GITHUB_JOB} \
#          || ( cd ${NFS_PATH}/${GITHUB_RUN_NUMBER}/ && rm -rf ${GITHUB_JOB} && exit 1 )
#          """



