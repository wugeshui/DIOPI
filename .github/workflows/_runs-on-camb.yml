name: runs on camb

on:
  workflow_call:
    inputs:
      machine:
        description: If set to other value, the job need ssh
        type: string
        required: false
        default: "CAMB"
      build_env:
        description: Set up the build environment
        type: string
        required: false
        default: "/mnt/cache/share/platform/env/camb_ci_diopi_impl"
      partition:
        description: Set cluster partition
        type: string
        required: false
        default: "${{ vars.SLURM_PAR_CAMB != '' && vars.SLURM_PAR_CAMB || 'camb_mlu370_m8 --exclude HOST-10-142-11-120,HOST-10-142-11-126' }}"
      runner:
        description: Set up the build environment
        type: string
        required: false
        default: "tps-diopi-ci"

jobs:
  checkout_code:
    name: checkout code
    runs-on: ${{ inputs.runner }}
    steps:
      - name: Checkout Code
        uses: wugeshui/DIOPI/.github/actions/checkout-code@wgs/add_test_ci
        with:
          machine: ${{ inputs.machine }}
  build:
    runs-on: ${{ inputs.runner }}
    needs: checkout_code
    steps:
      - name: build on camb
        uses: wugeshui/DIOPI/.github/actions/code-build-test@wgs/add_test_ci
        with:
          machine: ${{ inputs.machine }}
          build_env: ${{ inputs.build_env }}
          partition: ${{ inputs.partition }}
          build_shell: "cd impl && bash scripts/build_impl.sh camb"
          job_name: "build_test"
          cleaner: "clean_all_if_error"
      - name: clang-tidy
        uses: wugeshui/DIOPI/.github/actions/code-build-test@wgs/add_test_ci
        with:
          machine: ${{ inputs.machine }}
          build_env: ${{ inputs.build_env }}
          partition: ${{ inputs.partition }}
          build_shell: "cd impl && bash scripts/ci_script.sh clang-tidy"
          job_name: "build_test"
          cleaner: "clean_all_if_error"
          cover_job: "1"

  op-test:
    runs-on: ${{ inputs.runner }}
    needs: build
    steps:

#      - name: op test on camb
#        uses: wugeshui/DIOPI/.github/actions/code-build-test@main
#        with:
#          machine: ${{ inputs.machine }}
#          build_env: ${{ inputs.build_env }}
#          partition: ${{ inputs.partition }}
#          build_shell: "'cd diopi_test/python && python main.py --mode gen_case --impl_folder ${NFS_PATH_LUSTRE}/${GITHUB_RUN_NUMBER}/${BUILD_TEST1}/impl/camb/ && coverage run -p main.py --mode run_test'"
#          job_name: "build_test"
#          cleaner: "clean_data"
#          cover_job: "1"
      - name: all coverage check
        if: ${{ (contains( github.ref, 'main') || startsWith(github.ref, 'refs/heads/v') || startsWith(github.ref, 'refs/heads/dev')) }}
        uses: wugeshui/DIOPI/.github/actions/coverage@wgs/add_test_ci
        with:
          machine: ${{ inputs.machine }}
          build_env: ${{ inputs.build_env }}
          coverage_type: "all"
      - name: increment coverage check
        if: ${{ contains( github.event_name, 'pull_request' ) && contains( github.base_ref, 'main' ) }}
        uses: wugeshui/DIOPI/.github/actions/coverage@wgs/add_test_ci
        with:
          machine: ${{ inputs.machine }}
          build_env: ${{ inputs.build_env }}


  rt-test:
    runs-on: ${{ inputs.runner }}
    needs: build
    steps:
      - name: rt test on camb
        uses: wugeshui/DIOPI/.github/actions/code-build-test@main
        with:
          machine: ${{ inputs.machine }}
          build_env: ${{ inputs.build_env }}
          partition: ${{ inputs.partition }}
          build_shell: " cd diopi_test/python && python main.py --mode utest "
          srun_arg: "--gres=mlu:1"
          job_name: "build_test"
          cover_job: "1"
